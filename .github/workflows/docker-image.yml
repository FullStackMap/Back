name: Build and Deploy From A2B API

on:
  push:
    branches:
      - main
      - develop
      - features/*
  pull_request:
    branches:
      - main
      - develop

env:
  dockerTag: Prod
  aspnet_Core: Production

jobs:
  setup_tag:
    name: Setup dockerTag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup dockerTag to Dev
        if: startsWith(github.ref, 'refs/heads/features/')
        run: |
          echo "dockerTag=dev" >> $GITHUB_ENV

      - name: Setup dockerTag to Staging
        if: github.ref_name == 'develop'
        run: |
          echo "dockerTag=staging" >> $GITHUB_ENV

  restore_build:
    name: Restore and Build Project
    runs-on: ubuntu-latest
    outputs:
      artifact_path: ${{ steps.build.outputs.artifact_path }}
    env:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup .NET 8.0 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.x.x

      - name: Cache .NET packages
        uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-dotnet-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-dotnet-

      - name: App Settings Variable Substitution Global
        uses: microsoft/variable-substitution@v1
        with:
          files: './Map.Api/appsettings.json'
        env:
          JWTSettings.Secret: ${{secrets.JWT_KEY}}
          MailSettings.Server: ${{secrets.MAIL_SERVER}}
          MailSettings.Port: ${{secrets.MAIL_PORT}}
          MailSettings.UserName: ${{secrets.MAIL_USERNAME}}
          MailSettings.Password: ${{secrets.MAIL_PASSWORD}}

      - name: Restore dependencies
        run: dotnet restore ./Map.Api/Map.API.csproj

      - name: Build project
        id: build
        env:
          USE_IN_MEMORY_DATABASE: 'true'
        run: |
          mkdir -p build
          dotnet build ./Map.Api/Map.API.csproj --configuration Release --output ./build

      - name: Archive compiled files
        uses: actions/upload-artifact@v2
        with:
          name: compiled-files
          path: ./build/*

  CI:
    name: Building and deploy Image from-a2b-api
    runs-on: ubuntu-latest
    needs:
      - setup_tag
      - restore_build
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download compiled files artifact
        uses: actions/download-artifact@v2
        with:
          name: compiled-files
          path: ./compiled-files

      - name: DockerHub login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build --file ./Map.Api/Dockerfile.Release --tag ${{ secrets.REGISTRY_NAME }}/from-a2b-api:${{ env.dockerTag }} ./compiled-files

      - name: Push Docker Image to Registry
        run: docker push ${{ secrets.REGISTRY_NAME }}/from-a2b-api:${{ env.dockerTag }}
